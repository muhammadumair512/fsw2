// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  SERVICE_MASTER
  ADMIN
  USER
}

model User {
  id                 String       @id @default(cuid())
  role              Role        @default(USER)
  email              String       @unique
  password           String
   image     String

  firstName          String
  lastName           String
  birthDate         DateTime
  gender            Gender           @default(OTHER)
  username          String           @unique
  
  
   googleCalendarId   String?
  googleRefreshToken String?


  phone              String
  address            String
  city               String
  postalCode         String
  additionalInfo     String?
  isAdmin            Boolean      @default(false)
  isApproved         Boolean      @default(false)
  isActive           Boolean      @default(true)    // Added for account deactivation
  resetToken         String?
  resetTokenExpiry   DateTime?
  children           Child[]
  services           Service?
  paymentInfo        Payment?

 isDeleted Boolean   @default(false)
  isBlocked Boolean   @default(false)
  deletedAt DateTime?
  blockedAt DateTime?


  updateRequests     UpdateRequest[]
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
}

model Child {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String
  age           Int
  specialNotes  String?   
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Service {
  id                 String    @id @default(cuid())
  childcare          Boolean   @default(false)
  mealPreparation    Boolean   @default(false)
  lightHousekeeping  Boolean   @default(false)
  tutoring           Boolean   @default(false)
  petMinding         Boolean   @default(false)
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String    @unique
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Payment {
  id            String    @id @default(cuid())
  nameOnCard    String
  cardNumber    String
  expiryDate    String
  cvv           String
  saveCard      Boolean   @default(false)
  agreedToTerms Boolean   @default(true)
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}



model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

}